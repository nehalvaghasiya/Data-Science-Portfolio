{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Spam Ham classification","provenance":[],"collapsed_sections":[],"toc_visible":true,"mount_file_id":"1dhjVMRp8sYia8w7pvj34EkVLVrW_JdZ4","authorship_tag":"ABX9TyPJ5/LXH+vUCLnsxYAfF3GB"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"hZRSwoIMdibg"},"source":["**Import library**"]},{"cell_type":"code","metadata":{"id":"dldJOfqcb2ec","executionInfo":{"status":"ok","timestamp":1619676363923,"user_tz":-120,"elapsed":1896,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}}},"source":["import pandas as pd\n","import string\n","import nltk\n","from nltk.corpus import stopwords\n","from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.feature_extraction.text import TfidfTransformer\n","from sklearn.naive_bayes import MultinomialNB"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"j2_aIO46duZw"},"source":["**Get the data**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":191},"id":"XdOQmO9AdYIc","executionInfo":{"status":"ok","timestamp":1619676365030,"user_tz":-120,"elapsed":2965,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"c2d1041d-30b5-4841-ef7d-00dbb5fa5369"},"source":["messages = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/natural language processing/SMS Spam detection/SMSSpamCollection', sep='\\t',\n","                           names=[\"label\", \"message\"])\n","messages.head()"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>message</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ham</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ham</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>spam</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ham</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ham</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  label                                            message\n","0   ham  Go until jurong point, crazy.. Available only ...\n","1   ham                      Ok lar... Joking wif u oni...\n","2  spam  Free entry in 2 a wkly comp to win FA Cup fina...\n","3   ham  U dun say so early hor... U c already then say...\n","4   ham  Nah I don't think he goes to usf, he lives aro..."]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":162},"id":"LR2skPcpde7K","executionInfo":{"status":"ok","timestamp":1619676365034,"user_tz":-120,"elapsed":2948,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"bc90526c-81bb-40a7-cdb8-4ddd845d6c8b"},"source":["messages.describe()"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>message</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>5572</td>\n","      <td>5572</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>2</td>\n","      <td>5169</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>ham</td>\n","      <td>Sorry, I'll call later</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>4825</td>\n","      <td>30</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       label                 message\n","count   5572                    5572\n","unique     2                    5169\n","top      ham  Sorry, I'll call later\n","freq    4825                      30"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":191},"id":"p9WhXNBBeD03","executionInfo":{"status":"ok","timestamp":1619676365040,"user_tz":-120,"elapsed":2934,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"bd41f276-244e-4e5b-af5b-6536c884c828"},"source":["messages['length'] = messages['message'].apply(len)\n","messages.head()"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>label</th>\n","      <th>message</th>\n","      <th>length</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ham</td>\n","      <td>Go until jurong point, crazy.. Available only ...</td>\n","      <td>111</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ham</td>\n","      <td>Ok lar... Joking wif u oni...</td>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>spam</td>\n","      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n","      <td>155</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ham</td>\n","      <td>U dun say so early hor... U c already then say...</td>\n","      <td>49</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ham</td>\n","      <td>Nah I don't think he goes to usf, he lives aro...</td>\n","      <td>61</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  label                                            message  length\n","0   ham  Go until jurong point, crazy.. Available only ...     111\n","1   ham                      Ok lar... Joking wif u oni...      29\n","2  spam  Free entry in 2 a wkly comp to win FA Cup fina...     155\n","3   ham  U dun say so early hor... U c already then say...      49\n","4   ham  Nah I don't think he goes to usf, he lives aro...      61"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"uKpK-9RMeJ5N","executionInfo":{"status":"ok","timestamp":1619676365044,"user_tz":-120,"elapsed":2916,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"cbec9c66-7e99-4409-c898-9f3e76f13af8"},"source":["messages[messages['length'] == 111]['message'].iloc[0]\n"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'Go until jurong point, crazy.. Available only in bugis n great world la e buffet... Cine there got amore wat...'"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"markdown","metadata":{"id":"7ewWN5x8gvwk"},"source":["**Preprocessing of text**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6kIP1a7egjGs","executionInfo":{"status":"ok","timestamp":1619676365355,"user_tz":-120,"elapsed":3213,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"31195ce3-d797-4992-a635-d4d3c4ed96f0"},"source":["mess = 'Sample message! Notice: it has punctuation.'\n","\n","nopunctuation = [char for char in mess if char not in string.punctuation]\n","\n","nopunc = ''.join(nopunctuation)\n","\n","# Show some stop words\n","nltk.download('stopwords')\n","stopwords.words('english')[0:10] "],"execution_count":7,"outputs":[{"output_type":"stream","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', \"you're\"]"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XHBxS6gshp8K","executionInfo":{"status":"ok","timestamp":1619676365356,"user_tz":-120,"elapsed":3198,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"0930000c-5f76-4e02-b717-6c0a56c7048d"},"source":["nopunc.split()"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Sample', 'message', 'Notice', 'it', 'has', 'punctuation']"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"scypu95pihH4","executionInfo":{"status":"ok","timestamp":1619676365357,"user_tz":-120,"elapsed":3182,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"5411e2e2-9f3e-4e81-846f-c0af136f0451"},"source":["# Now just remove any stopwords\n","clean_message = [word for word in nopunc.split() if word.lower() not in stopwords.words('english')]\n","clean_message"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Sample', 'message', 'Notice', 'punctuation']"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"markdown","metadata":{"id":"sZ3fHbz1jFZD"},"source":["**Make function of text preprocessing**"]},{"cell_type":"code","metadata":{"id":"USNEPXZ5i3t0","executionInfo":{"status":"ok","timestamp":1619676365358,"user_tz":-120,"elapsed":3179,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}}},"source":["def text_process(mess):\n","    \"\"\"\n","    Takes in a string of text, then performs the following:\n","    1. Remove all punctuation\n","    2. Remove all stopwords\n","    3. Returns a list of the cleaned text\n","    \"\"\"\n","    # Check characters to see if they are in punctuation\n","    nopunc = [char for char in mess if char not in string.punctuation]\n","\n","    # Join the characters again to form the string.\n","    nopunc = ''.join(nopunc)\n","    \n","    # Now just remove any stopwords\n","    return [word for word in nopunc.split() if word.lower() not in stopwords.words('english')]"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NcqC0gmyjPv2","executionInfo":{"status":"ok","timestamp":1619676365359,"user_tz":-120,"elapsed":3165,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"d9fd41d9-68d5-4354-b04b-42334f982877"},"source":["messages['message'].head(5).apply(text_process)"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    [Go, jurong, point, crazy, Available, bugis, n...\n","1                       [Ok, lar, Joking, wif, u, oni]\n","2    [Free, entry, 2, wkly, comp, win, FA, Cup, fin...\n","3        [U, dun, say, early, hor, U, c, already, say]\n","4    [Nah, dont, think, goes, usf, lives, around, t...\n","Name: message, dtype: object"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"markdown","metadata":{"id":"WtbqwWgPJFpE"},"source":["**Vectorization**\n","- convert a list of tokens into vectors using bag-of-words\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J1o40-Z6jU1o","executionInfo":{"status":"ok","timestamp":1619676375528,"user_tz":-120,"elapsed":13319,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"fdd5bf08-a503-4bc2-9549-19260b26ecf8"},"source":["from sklearn.feature_extraction.text import CountVectorizer\n","bow_transformer = CountVectorizer(analyzer=text_process).fit(messages['message'])\n","print(len(bow_transformer.vocabulary_))"],"execution_count":12,"outputs":[{"output_type":"stream","text":["11425\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"A4YFShSiJrfQ"},"source":["- vectorial representation"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EMP2hwumJkgi","executionInfo":{"status":"ok","timestamp":1619676375530,"user_tz":-120,"elapsed":13307,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"bdbf6b9b-fae1-478a-e229-bb0f06fd934c"},"source":["message4 = messages['message'][3]\n","print(message4)\n","bow4 = bow_transformer.transform([message4])\n","print(bow4)\n","print(bow4.shape)"],"execution_count":13,"outputs":[{"output_type":"stream","text":["U dun say so early hor... U c already then say...\n","  (0, 4068)\t2\n","  (0, 4629)\t1\n","  (0, 5261)\t1\n","  (0, 6204)\t1\n","  (0, 6222)\t1\n","  (0, 7186)\t1\n","  (0, 9554)\t2\n","(1, 11425)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"iJ6SqeiyKHan"},"source":["- The bag-of-words counts for the entire SMS corpus is a large which is sparse matrix:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T_LIZ2xQJ6Wx","executionInfo":{"status":"ok","timestamp":1619676385522,"user_tz":-120,"elapsed":23279,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"72281b71-be10-463f-d6ce-dc17cf113092"},"source":["messages_bow = bow_transformer.transform(messages['message'])\n","print('Shape of Sparse Matrix: ', messages_bow.shape)\n","print('Amount of Non-Zero occurences: ', messages_bow.nnz)"],"execution_count":14,"outputs":[{"output_type":"stream","text":["Shape of Sparse Matrix:  (5572, 11425)\n","Amount of Non-Zero occurences:  50548\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"lkus7Uj1Kxc3"},"source":["**TF-IDF**\n","\n","Term Frequency: how frequently a term occurs in a document. \n","\n","Inverse Document Frequency: how important a term is.\n","\n","For example: Consider a document containing 100 words wherein the word cat appears 3 times.\n","\n","The term frequency (i.e., tf) for cat is then (3 / 100) = 0.03. Now, assume we have 10 million documents and the word cat appears in one thousand of these. Then, the inverse document frequency (i.e., idf) is calculated as log(10,000,000 / 1,000) = 4. Thus, the Tf-idf weight is the product of these quantities: 0.03 * 4 = 0.12.\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YOVskbDEKiKF","executionInfo":{"status":"ok","timestamp":1619676385523,"user_tz":-120,"elapsed":23264,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"cb96de99-dc6c-4367-b76a-a17298bcd787"},"source":["from sklearn.feature_extraction.text import TfidfTransformer\n","\n","tfidf_transformer = TfidfTransformer().fit(messages_bow)\n","tfidf4 = tfidf_transformer.transform(bow4)\n","print(tfidf4)"],"execution_count":15,"outputs":[{"output_type":"stream","text":["  (0, 9554)\t0.5385626262927564\n","  (0, 7186)\t0.4389365653379857\n","  (0, 6222)\t0.3187216892949149\n","  (0, 6204)\t0.29953799723697416\n","  (0, 5261)\t0.29729957405868723\n","  (0, 4629)\t0.26619801906087187\n","  (0, 4068)\t0.40832589933384067\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V7G9l1c0LiJv","executionInfo":{"status":"ok","timestamp":1619676385524,"user_tz":-120,"elapsed":23250,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"f9887e05-0d83-4ed9-fb23-df81823bf05e"},"source":["messages_tfidf = tfidf_transformer.transform(messages_bow)\n","print(messages_tfidf.shape)"],"execution_count":16,"outputs":[{"output_type":"stream","text":["(5572, 11425)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"izivtYRILuR7"},"source":["**Training with Naive Bayes algorithm**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZKioqMPHNNSK","executionInfo":{"status":"ok","timestamp":1619676385525,"user_tz":-120,"elapsed":23236,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"702a9871-e50d-4fa0-dc03-47ab15913c41"},"source":["#spliting the data into train test, where test size is 20%\n","\n","from sklearn.model_selection import train_test_split\n","\n","msg_train, msg_test, label_train, label_test = \\\n","train_test_split(messages['message'], messages['label'], test_size=0.2)\n","\n","print(len(msg_train), len(msg_test), len(msg_train) + len(msg_test))"],"execution_count":17,"outputs":[{"output_type":"stream","text":["4457 1115 5572\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"PrThdgsKNiPg","executionInfo":{"status":"ok","timestamp":1619676385526,"user_tz":-120,"elapsed":23234,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}}},"source":["from sklearn.pipeline import Pipeline\n","\n","pipeline = Pipeline([\n","    ('bow', CountVectorizer(analyzer=text_process)),  # strings to token integer counts\n","    ('tfidf', TfidfTransformer()),  # integer counts to weighted TF-IDF scores\n","    ('classifier', MultinomialNB()),  # train on TF-IDF vectors w/ Naive Bayes classifier\n","])"],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xg1WW4wmNqGo","executionInfo":{"status":"ok","timestamp":1619676393592,"user_tz":-120,"elapsed":31285,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"571a99e6-e1cb-47fd-853f-ab47e81bc9b1"},"source":["pipeline.fit(msg_train,label_train)"],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pipeline(memory=None,\n","         steps=[('bow',\n","                 CountVectorizer(analyzer=<function text_process at 0x7f8b4bc32710>,\n","                                 binary=False, decode_error='strict',\n","                                 dtype=<class 'numpy.int64'>, encoding='utf-8',\n","                                 input='content', lowercase=True, max_df=1.0,\n","                                 max_features=None, min_df=1,\n","                                 ngram_range=(1, 1), preprocessor=None,\n","                                 stop_words=None, strip_accents=None,\n","                                 token_pattern='(?u)\\\\b\\\\w\\\\w+\\\\b',\n","                                 tokenizer=None, vocabulary=None)),\n","                ('tfidf',\n","                 TfidfTransformer(norm='l2', smooth_idf=True,\n","                                  sublinear_tf=False, use_idf=True)),\n","                ('classifier',\n","                 MultinomialNB(alpha=1.0, class_prior=None, fit_prior=True))],\n","         verbose=False)"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"markdown","metadata":{"id":"lEQDYR0-MgF5"},"source":["**Evaluation**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ylzmSfx1NsWg","executionInfo":{"status":"ok","timestamp":1619676395680,"user_tz":-120,"elapsed":33356,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"6c7426a6-d093-402a-b9ec-0e0462fd319f"},"source":["predictions = pipeline.predict(msg_test)\n","predictions"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['ham', 'spam', 'ham', ..., 'spam', 'spam', 'ham'], dtype='<U4')"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"markdown","metadata":{"id":"GnIVFpnxMs-r"},"source":["- Precision, recall and F1 score"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PR4UrXgMMo3g","executionInfo":{"status":"ok","timestamp":1619676456421,"user_tz":-120,"elapsed":643,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"bfa976e1-ce92-457b-8bff-caf7ee770cf5"},"source":["from sklearn.metrics import accuracy_score,classification_report\n","print(classification_report(predictions,label_test))"],"execution_count":23,"outputs":[{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","         ham       1.00      0.95      0.98      1007\n","        spam       0.70      1.00      0.82       108\n","\n","    accuracy                           0.96      1115\n","   macro avg       0.85      0.98      0.90      1115\n","weighted avg       0.97      0.96      0.96      1115\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"4eh_VhhBNx6l"},"source":["# Training with Support Vector Machine"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aJ94WkQBN6KW","executionInfo":{"status":"ok","timestamp":1619676582698,"user_tz":-120,"elapsed":870,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"206155f1-4afd-4598-ca36-14a3e6976795"},"source":["from sklearn.linear_model import SGDClassifier\n","\n","sgd = Pipeline([('vect', CountVectorizer()),\n","                ('tfidf', TfidfTransformer()),\n","                ('clf', SGDClassifier(loss='hinge', penalty='l2',alpha=1e-3, random_state=42, max_iter=5, tol=None)),\n","               ])\n","sgd.fit(msg_train, label_train)\n","\n","\n","\n","label_pred = sgd.predict(msg_test)\n","\n","print('accuracy %s' % accuracy_score(label_pred, label_test))\n","print(classification_report(label_test, label_pred))"],"execution_count":26,"outputs":[{"output_type":"stream","text":["accuracy 0.9695067264573991\n","              precision    recall  f1-score   support\n","\n","         ham       0.97      1.00      0.98       960\n","        spam       0.98      0.79      0.88       155\n","\n","    accuracy                           0.97      1115\n","   macro avg       0.98      0.90      0.93      1115\n","weighted avg       0.97      0.97      0.97      1115\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"bTsJVpOkP6fN"},"source":["# Training with Logistic Regression"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ghOcl1m4N_mz","executionInfo":{"status":"ok","timestamp":1619676678246,"user_tz":-120,"elapsed":944,"user":{"displayName":"Nehal Vaghasiya","photoUrl":"","userId":"15527123440728283390"}},"outputId":"cb437798-cfc2-4e21-f035-76e5c0a1ea6e"},"source":["from sklearn.linear_model import LogisticRegression\n","\n","logreg = Pipeline([('vect', CountVectorizer()),\n","                ('tfidf', TfidfTransformer()),\n","                ('clf', LogisticRegression(n_jobs=1, C=1e5)),\n","               ])\n","\n","logreg.fit(msg_train, label_train)\n","\n","\n","\n","label_pred = logreg.predict(msg_test)\n","\n","print('accuracy %s' % accuracy_score(label_pred, label_test))\n","print(classification_report(label_test, label_pred))"],"execution_count":27,"outputs":[{"output_type":"stream","text":["accuracy 0.9883408071748879\n","              precision    recall  f1-score   support\n","\n","         ham       0.99      1.00      0.99       960\n","        spam       0.99      0.92      0.96       155\n","\n","    accuracy                           0.99      1115\n","   macro avg       0.99      0.96      0.97      1115\n","weighted avg       0.99      0.99      0.99      1115\n","\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:940: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"I2eTlD9HQMRD"},"source":[""],"execution_count":null,"outputs":[]}]}