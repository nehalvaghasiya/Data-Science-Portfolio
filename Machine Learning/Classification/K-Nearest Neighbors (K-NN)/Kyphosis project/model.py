# -*- coding: utf-8 -*-
"""Kyphosis_detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dx4OQ-OY537grdLgdPj6mHXmJikWWebH

#Kyphosis Detection
"""

from google.colab import drive
drive.mount('/content/drive')

"""

## Import Libraries"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

"""#Get the data
- Required steps to follow:
  1. Connect google-collab to google drive
  2. Arrange the files according to directory tree as shown in Readme.md
  3. Add the created model to the directory and use it in deployment.

"""

#pd.read_csv('file_name')
df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Machine learning/Classification/K-Nearest-Neighbors/Kyphosis project/kyphosis.csv')

df.head()

"""## EDA


"""

sns.pairplot(df,hue='Kyphosis',palette='Set1')

"""## Train Test Split


"""

from sklearn.model_selection import train_test_split

X = df.drop('Kyphosis',axis=1)
y = df['Kyphosis']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30)

"""#Feature scaling"""

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

"""## Training the K-NN model on the Training set"""

from sklearn.neighbors import KNeighborsClassifier
model = KNeighborsClassifier(n_neighbors = 5, metric = 'minkowski', p = 2)
model.fit(X_train, y_train)

"""## Predicting a new result"""

print(model.predict(sc.transform([[40,3,4]])))

y_pred = model.predict(X_test)
print(y_pred)

"""# Evaluation 

"""

from sklearn.metrics import confusion_matrix, classification_report
print(confusion_matrix(y_test,y_pred))

print(classification_report(y_test,y_pred))

#Store the model parameters using Pickle libraries

import pickle
pickle.dump(model, open('kyphosis_knn_model.pkl','wb'))

