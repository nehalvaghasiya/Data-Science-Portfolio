# -*- coding: utf-8 -*-
"""support_vector_regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1myHK-D8h7mgyW8Wp_71i5oVIdMATXXYe

# Support Vector Regression (SVR)

## Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""#Get the data
- Required steps to follow:
  1. Connect google-collab to google drive
  2. Arrange the files according to directory tree as shown in Readme.md
  3. Add the created model to the directory and use it in deployment.
"""

from google.colab import drive
drive.mount('/content/drive')

#pd.read_csv('file_name')
data = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Machine learning/Regression/Support Vector Regression (SVR)/Position_Salaries.csv')

data.head(5)

data.describe()

X = data.iloc[:, 1:-1].values  #level
y = data.iloc[:, -1].values  #salary

print(X)

np.reshape(y, (-1, 1))

"""## Training the SVR model on the whole dataset"""

from sklearn.svm import SVR
model = SVR(kernel = 'rbf')
model.fit(X, y)

"""## Predicting a new result"""

model.predict([[6.5]])

"""## Visualising the SVR results"""

plt.scatter(sc_X.inverse_transform(X), sc_y.inverse_transform(y), color = 'red')
plt.plot(sc_X.inverse_transform(X), sc_y.inverse_transform(model.predict(X)), color = 'blue')
plt.title('Truth or Bluff (SVR)')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()

"""## Visualising the SVR results (for higher resolution and smoother curve)"""

X_grid = np.arange(min(sc_X.inverse_transform(X)), max(sc_X.inverse_transform(X)), 0.1)
X_grid = X_grid.reshape((len(X_grid), 1))
plt.scatter(sc_X.inverse_transform(X), sc_y.inverse_transform(y), color = 'red')
plt.plot(X_grid, sc_y.inverse_transform(model.predict(sc_X.transform(X_grid))), color = 'blue')
plt.title('Truth or Bluff (SVR)')
plt.xlabel('Position level')
plt.ylabel('Salary')
plt.show()

#Store the model parameters using Pickle libraries

import pickle
pickle.dump(model, open('salary_SVR_model.pkl','wb'))

